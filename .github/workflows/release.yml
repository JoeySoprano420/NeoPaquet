name: NeoPaquet Release (PyPI + GitHub)

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build pytest

      - name: Run tests
        run: pytest tests/

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: neopaquet-${{ matrix.os }}
          path: dist/*

  build-kali:
    name: Build on Kali Linux
    runs-on: ubuntu-latest
    container:
      image: kalilinux/kali-rolling

    steps:
      - name: Install dependencies inside Kali
        run: |
          apt-get update
          apt-get install -y python3 python3-pip git build-essential
          pip3 install setuptools wheel build pytest

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Run tests
        run: pytest tests/ || echo "⚠️ Tests skipped in Kali (adjust if needed)"

      - name: Build package
        run: python3 -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: neopaquet-kali
          path: dist/*

  release:
    name: Publish PyPI + GitHub Release
    runs-on: ubuntu-latest
    needs: [build, build-kali]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package (safety re-run)
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "NeoPaquet ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          draft: true
          generate_release_notes: true
          files: release_dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
