-- ======================================================
-- stdlib/core.np
-- NeoPaquet Core Standard Library
-- Unified import for IO, Math, and Core Utilities
-- ======================================================

-- ðŸ”¹ Bring in stdlib modules ---------------------------

import "stdlib/io.np"
import "stdlib/math.np"

-- ======================================================
-- ðŸ”¹ Core Runtime Utilities
-- ======================================================

-- Exit program ----------------------------------------

@func ("exit") [code] go {
    extern ("exit") [code]
    exit(code)
    return 0
}

-- Program sleep (milliseconds) ------------------------

@func ("sleep_ms") [ms] go {
    extern ("usleep") [usec]
    usec = ms * 1000
    usleep(usec)
    return 0
}

-- ======================================================
-- ðŸ”¹ String Utilities
-- ======================================================

@func ("len") [s] go {
    extern ("strlen") [s]
    return strlen(s)
}

@func ("concat") [a, b] go {
    buffer = mem.arena { size=1024 }
    extern ("strcpy") [buffer, a]
    extern ("strcat") [buffer, b]
    return buffer
}

@func ("compare") [a, b] go {
    extern ("strcmp") [a, b]
    return strcmp(a, b)
}

@func ("substring") [s, start, length] go {
    buffer = mem.arena { size=1024 }
    i = 0
    loop {
        if i == length { break }
        buffer[i] = s[start + i]
        i = i + 1
    }
    buffer[length] = 0
    return buffer
}

-- ======================================================
-- ðŸ”¹ Type Helpers
-- ======================================================

@func ("to_int") [s] go {
    extern ("atoi") [s]
    return atoi(s)
}

@func ("to_string") [n] go {
    buffer = mem.arena { size=32 }
    extern ("sprintf") [buffer, "%d", n]
    return buffer
}

-- ======================================================
-- ðŸ”¹ Misc Convenience
-- ======================================================

@func ("assert") [cond, msg] go {
    if cond == 0 {
        print ["Assertion failed: "]
        print [msg]
        exit(1)
    }
    return 0
}

-- Version info ----------------------------------------

@func ("version") [] go {
    print ["NeoPaquet Stdlib v1.0 (core)"]
    return 0
}

-- ======================================================
-- End of stdlib/core.np
-- ======================================================
